"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.driverRoutes = void 0;
const express_1 = require("express");
const checkAuth_middleware_1 = require("../../middlewares/checkAuth.middleware");
const updateUserLocation_middleware_1 = require("../../middlewares/updateUserLocation.middleware");
const validateReq_middleware_1 = require("../../middlewares/validateReq.middleware");
const user_interface_1 = require("../user/user.interface");
const driver_controller_1 = require("./driver.controller");
const driver_validation_1 = require("./driver.validation");
const router = (0, express_1.Router)();
router.post("/check-ride-request", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER), updateUserLocation_middleware_1.updateUserLocationIntoDb, driver_controller_1.checkRideRequest);
router.post("/accept-ride-request/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER, user_interface_1.UserRole.ADMIN), updateUserLocation_middleware_1.updateUserLocationIntoDb, driver_controller_1.acceptRideRequest);
router.post("/cancel-ride-request/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.ADMIN, user_interface_1.UserRole.DRIVER, user_interface_1.UserRole.RIDER), updateUserLocation_middleware_1.updateUserLocationIntoDb, driver_controller_1.cancelRideRequest);
router.patch("/pick-up/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER), updateUserLocation_middleware_1.updateUserLocationIntoDb, driver_controller_1.pickUpRide);
router.patch("/in-transit/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER), updateUserLocation_middleware_1.updateUserLocationIntoDb, driver_controller_1.inTransitRide);
router.patch("/complete-ride/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER), updateUserLocation_middleware_1.updateUserLocationIntoDb, driver_controller_1.completeRide);
router.patch("/driver-update-vehicle/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER, user_interface_1.UserRole.ADMIN), (0, validateReq_middleware_1.validateRequest)(driver_validation_1.vehicleInfoZodSchema), driver_controller_1.updateVehicleInfo);
router.get("/driver-state/:id", (0, checkAuth_middleware_1.checkAuth)(user_interface_1.UserRole.DRIVER, user_interface_1.UserRole.ADMIN), driver_controller_1.driverState);
exports.driverRoutes = router;
